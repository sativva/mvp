
$(document).ready(function() {
  $(function() {

    function isIE() {
        var ua = window.navigator.userAgent;
        var msie = ua.indexOf("MSIE ");

        if (msie > 0 || !!navigator.userAgent.match(/Trident.*rv\:11\./)) // If Internet Explorer, return version number
        {
            $("body").addClass('IE')
            return true
        }
        else  // If another browser, return 0
        {
            console.log('otherbrowser');
        }

        return false;
    }

    if (($(window).width() > 798) && ($(window).width() <= 1099)) {
      $('.top_bar .search_container input').remove()
      $('.top_bar .search_container .icon-search').click(function(e) {
        e.stopPropagation();
        e.stopImmediatePropagation();
        e.preventDefault();
        window.location.href = 'https://www.mesvoisinsproducteurs.com/search/?q=#';
      })
    }

    // $('.scroll-top').on('click', function() {
    //   $('html, body').animate({ scrollTop: 0 }, 1000);
    // })
    // $('.scroll-down').on('click', function() {
    //   $('html, body').animate({ scrollTop: $('.headline-section').offset().top }, 1000);
    // })
    var BrowserDetect = {
      init: function() {
        this.browser = this.searchString(this.dataBrowser) || "Other";
        this.version = this.searchVersion(navigator.userAgent) || this.searchVersion(navigator.appVersion) || "Unknown";
      },
      searchString: function(data) {
        for (var i = 0; i < data.length; i++) {
          var dataString = data[i].string;
          this.versionSearchString = data[i].subString;
          if (dataString.indexOf(data[i].subString) !== -1) {
            return data[i].identity;
          }
        }
      },
      searchVersion: function(dataString) {
        var index = dataString.indexOf(this.versionSearchString);
        if (index === -1) {
          return;
        }

        var rv = dataString.indexOf("rv:");
        if (this.versionSearchString === "Trident" && rv !== -1) {
          return parseFloat(dataString.substring(rv + 3));
        } else {
          return parseFloat(dataString.substring(index + this.versionSearchString.length + 1));
        }
      },

      dataBrowser: [
        { string: navigator.userAgent, subString: "Edge", identity: "MS Edge" },
        { string: navigator.userAgent, subString: "MSIE", identity: "Explorer" },
        { string: navigator.userAgent, subString: "Trident", identity: "Explorer" },
        { string: navigator.userAgent, subString: "Firefox", identity: "Firefox" },
        { string: navigator.userAgent, subString: "Opera", identity: "Opera" },
        { string: navigator.userAgent, subString: "OPR", identity: "Opera" },
        { string: navigator.userAgent, subString: "Chrome", identity: "Chrome" },
        { string: navigator.userAgent, subString: "Safari", identity: "Safari" }
      ]
    };

    BrowserDetect.init();

    var bv = BrowserDetect.browser;
    if (bv == "Chrome") {
      $("body").addClass("chrome");
    } else if (bv == "MS Edge") {
      $("body").addClass("edge");
    } else if (bv == "Explorer") {
      $("body").addClass("ie");
      if (BrowserDetect.version < 11) {
        alert("Votre navigateur est obsolète, nous vous conseillons de naviguer sous chrome ou firefox")
      }
    } else if (bv == "Firefox") {
      $("body").addClass("Firefox");
    } else if (bv == "Safari") {
      $("body").addClass("Safari");
    }

    $('.collection-list').each(function() {
      var classes = $(this).attr('class')
      classes = classes.split(' ')
      var datasort;
      classes.forEach(function(clss) {
        if (clss.indexOf("home") >= 0) {
          datasort = clss.replace(/[^\d.,]+/, '');
        }
      })
      $(this).attr('data-sort', datasort)
    })


    $('.ui-tabs-anchor').click(function(e) {
      e.preventDefault();
      e.stopImmediatePropagation();
      if ($(this).parents('.easytabs-content-item').hasClass('easytabs-active')) {
        $(this).parents('.easytabs-content-item').removeClass('easytabs-active');
        $(this).parents('.easytabs-content-item').find('.easytabs-content-holder').slideUp();
      } else {
        $(this).parents('.easytabs-content-item').addClass('easytabs-active');
        $('.easytabs-content-holder').not($(this).parents('.easytabs-content-item').find('.easytabs-content-holder')).slideUp();
        $(this).parents('.easytabs-content-item').find('.easytabs-content-holder').slideDown();
      }
    })


    jQuery.fn.sortDivs = function sortDivs() {
      $("> div", this[0]).sort(dec_sort).appendTo(this[0]);
      function dec_sort(a, b) { return ($(b).data("sort")) < ($(a).data("sort")) ? 1 : -1; }
    }

    setTimeout(function() {
      $('.image-with-text-overlay-section.under-menu .banner .image-element__wrap, .image-with-text-overlay-section.under-menu .banner').css('height', ($('.preheader.closed .container').height() + 130) + 'px');
      $(".collection-list-container").sortDivs()
    }, 100);

    $(window).resize(function() {
      $('.image-with-text-overlay-section.under-menu .banner .image-element__wrap, .image-with-text-overlay-section.under-menu .banner').css('height', ($('.preheader.closed .container').height() + 130) + 'px');
    });

    // if ($('.relais-map').length > 0) {
    // }
    if ($(window).width() > 768) {
      $('.collection-list-container.slider').flickity('destroy');
      $('.gallery-slider.slider').flickity('destroy');
      $('.reviews-list-container.slider').flickity('destroy');

      $(window).scroll(function() {
        if ($(document).scrollTop() > 25) {
          $('.top_bar').css({ 'position': 'fixed', 'top': '0px' });
          $("body").css({"top": '104px', "position": "relative"});
        } else {
          $('.top_bar').css({ 'position': 'relative' });
          $("body").css({"top": '0px', "position": "relative"});
        }
      });
    } else {
      $('.homepage .image-with-text').each(function() {
        if ($('.description p', this).text().length > 210) {
          $('.description p', this).css({
            'height': '130px',
            'overflow': 'hidden'
          })
          $('.description', this).append('<p class="dots" style="margin: 0">...</p><br><div class="voirplus"><u>voir plus</u></div>')
        }
      })
      $('.voirplus').click(function() {
        $(this).parent().find('p').css({
          'height': 'initial',
          'overflow': 'initial'
        })
        $(this, '.dots').fadeOut();
      })
      $('.icon-cart, .mini_cart').click(function(e) {
        e.preventDefault();
        e.stopPropagation();
        e.stopImmediatePropagation();
        location.href = "/cart"
      })
    }

    $('.clear-active-filter').on('click', function() {
      window.location.href = window.location.href.match(/^.+(\/)/)[0];
    });

    // $("#checkout").click(function(e) {
    //   e.preventDefault()
    //   // postZapietID();
    //   // postCheckout();


    // });
    // var cook = JSON.parse(Cookies.get('dlvy'))
    // $('#cart_form').find('#storePickupApp .checkoutMethod:last-child').click()
    // $('#cart_form').find('#storePickupApp #location_'+cook.pickup_id).click()
    // DELIVERY FORM
    // prevent key enter submit
    $('form input').keydown(function(e) {
      if (e.keyCode == 13) {
        e.preventDefault();
        return false;
      }
    });

    // set variables
    {% assign hour_min = settings.change_day_hour | split: ':' %}

    var days = ['sunday', 'monday', 'tuesday', 'wednesday', 'thursday', 'friday', 'saturday'];
    var days_fr = ['dimanche', 'lundi', 'mardi', 'mercredi', 'jeudi', 'vendredi', 'samedi'];
    var monthNames = ["janvier", "février", "mars", "avril", "mai", "juin", "juillet", "aout", "septembre", "octobre", "novembre", "décembre"];
    var delivery_hour_limit = new Date();
    var json_data_loc;
    var json_data;
    var textual_day;

    var closed_days = "{{ settings.closed_days }}".split(',');

    delivery_hour_limit.setHours({{ hour_min | first }});
    delivery_hour_limit.setMinutes({{ hour_min | last }});
    delivery_hour_limit.setMilliseconds(0);

    var expire = new Date();
    expire.setHours(0,0,1,0);
    expire.setDate(expire.getDate() + 1)
    expire = new Date(expire)

    var d = new Date();
    // const today = new Date()
    // const tomorrow = new Date(today)
    // tomorrow.setDate(tomorrow.getDate() + 1)
    var currentTime = d;
    var n = d.getDay();
    var is_closed = false;


    var textual_close_day = days[n];
    var formated_curentTime = currentTime.toLocaleDateString('FR').split('').filter(function(v) {return v.charCodeAt() != 8206 }).join('')
    formated_curentTime = formated_curentTime.match(/\d*[\/]*/g).filter(function(v) {return v.charCodeAt() != "" }).join('')
    console.log(formated_curentTime);
    console.log("zzzzzzzzzzzzzzzz");
    var expr = /\d+/g;
    var parts = formated_curentTime.match(expr);
    formated_curentTime = parts.join('/')
    console.log(formated_curentTime);
    if (closed_days.includes(textual_close_day) || closed_days.includes( formated_curentTime )) {
      var is_closed = true;
    }
    console.log(is_closed);


    if (delivery_hour_limit > d) {
      var not_today = false;
    } else {
      (n == 6) ? n = 0: n = n + 1
      currentTime.setDate(currentTime.getDate() + 1);
      var not_today = true;
    }
    textual_day = days[n];

    // if closed_day
    // set it for tomorrow if it past deliveryHourLimit
    // set it the next day if its closed day

    while (closed_days.includes(textual_day) || closed_days.includes(currentTime.toLocaleDateString().split('').filter(function(v) {return v.charCodeAt() != 8206 }).join('') )) {
      currentTime.setDate(currentTime.getDate() + 1);

      (n == 6) ? n = 0: n = n + 1
      textual_day = days[n];
      not_today = true;
      console.log(not_today)
      console.log(closed_days)
    }

    // today date 'yyyy-mm-dd'
    var today_date = currentTime.toLocaleDateString('FR').split('').filter(function(v) {return v.charCodeAt() != 8206 }).join('').split('/').reverse().join('-');

    console.log("today_date _______________________________")
    console.log(today_date)







    // Set marker object
    var geojson = {
      type: 'FeatureCollection',
      features: []
    }








  var interv = function() {
    if (Cookies.get('eg_cookieconsent_status') != 'allow') {
      if ($('.eg-cc-dismiss').length > 0) {
        $('.eg-cc-dismiss').addClass('eg-cc-allow').removeClass('eg-cc-dismiss').attr('aria-label', 'allow cookie message')
      }
    } else {
      clearInterval(intervalId);
    }
  }
  var intervalId = setInterval(interv, 1000)






    var getCart = function() {
      $.ajax({
        method: "GET",
        url: "/cart",
        dataType: 'json',
        complete: function(data) {
          // console.log(data.responseJSON);
          CartJS.init(data.responseJSON, {
            "dataAPI": false,
            "requestBodyClass": "loading"
          });
        }
      })
    }

    if ($(window).width() < 768) {
      if ($('.collection_description').height() > 125) {
        var oldHeight = $('.collection_description').height();
        $('.collection_description').addClass('open');
        $('#readMore, .fade').css('display', 'block');

        var i = 0;
        $('#readMore').on('click', function(e) {
          i += 1
          $('#readMore').text((i % 2) ? 'Voir moins...' : 'Voir plus...');
          (i % 2) ? $('.fade').fadeOut(): $('.fade').fadeIn();
          $('.collection_description').animate({ height: (i % 2) ? oldHeight : '125px' }, 200);
        });
      }
    }
    $(document).keydown(function(e) {
        if (e.keyCode == 27) {
          e.preventDefault()
          e.stopImmediatePropagation()
          return false;
        }
    });










































    // NEWFORM
    var getNextDlvDay = function(dlv) {
      var d_day;
      console.log("getNextDlvDay" + d_day);
      // reorder start day in array
      days_from_today = days.slice(days.indexOf(textual_day) + 1, 7);
      days_before_today = days.slice(0, days.indexOf(textual_day));
      days_before_today.forEach(function(day) {
        days_from_today.push(day);
      });
      console.log(days_from_today);

      // for each next days see if there is delivery
      days_from_today.every(function(day) {
        console.log("every" + day);

        var dlv_enabled = dlv[day].slots.enabled;
        var is_blackout_day = dlv[day].blackout_dates.includes(today_date);
        if (dlv_enabled && !is_blackout_day) {
          d_day = day
          return d_day;
        }
      })
      // return the index of the day
      console.log(days.indexOf(d_day));
      return days.indexOf(d_day)

    }

    var call_pickup_new = function() {
      $('.stores_list').html('')
      $.ajax({
        method: "POST",
        url: "https://api.zapiet.com/v4.0/pickup/locations?shop=mes-voisins-producteurs2.myshopify.com",
        data: { "shop": "mes-voisins-producteurs2.myshopify.com" },
        dataType: 'json',
        success: function(useremail) {},
        error: function(xhr, status, err) {},
        complete: function(xhr, status) {
          if (status === 'error' || !xhr.responseText || xhr.responseJSON["locations"].length == 0) {
            // if error, no delivery in your town
            $('.pickup .no_pickup_available').show()
            $('.pickup .subtitle').hide()
            $('.stores_list').html('')
          } else {
            json_data_loc = JSON.parse(xhr.responseText);
            var pickup_today = []

            json_data_loc.locations.forEach(function(loc) {
              if (!loc.opening_hours[textual_day].closed) {
                pickup_today.push(loc);
                console.log(loc);


                  var single_loc = '<label class="cus_check ">'
                  single_loc += '<li class="store_item undeployed">'
                  single_loc += '<div>'
                  single_loc += '<input type="radio" name="store_item" value="' + loc.id
                  single_loc += '" data-coord="' + loc.longitude + ',' + loc.latitude + '"'
                  single_loc += ' data-slot="' + loc.opening_hours[textual_day].opens + ' - ' + loc.opening_hours[textual_day].closes + '"'
                  single_loc += ' data-slot-interval="' + 30 + '"'
                  single_loc += ' data-addr1="' + loc.address_line_1 + '"'
                  single_loc += ' data-addr2="' + loc.address_line_2 + '"'
                  single_loc += ' data-city="' + loc.city + '"'
                  single_loc += ' data-zip="' + loc.postal_code + '"'
                  single_loc += ' data-country="' + loc.country + '"'
                  single_loc += ' data-hour="' + loc.opening_hours[textual_day].opens + '"'


                  single_loc += ' data-loc_id="' + loc.id + '"'
                  single_loc += ' data-custom_attribute_1="' + loc.custom_attribute_1 + '"'
                  single_loc += ' data-company_name="' + loc.company_name +'">'
                  single_loc += '<span class="checkmark"></span>'
                  single_loc += '</div>'
                  single_loc += '<div style="position: relative;padding-left: 36px;">'
                  single_loc += '<p class="title">' + loc.company_name + '</p>'
                  single_loc += '<p class="address">'+loc.address_line_1 +'</p>'
                  single_loc += '<div class="toggle_content hidden">'
                  single_loc += '<p> '+loc.address_line_1 + ', ' +loc.postal_code  +' ' +loc.city+ '<br>'
                  single_loc += ' Horaire de retrait : '+loc.opening_hours[textual_day].opens + ' - ' + loc.opening_hours[textual_day].closes +  '<br>'
                  single_loc += ' Retrait du mardi au vendredi</p>'
                  single_loc += '</div>'
                  single_loc += '</div>'
                  single_loc += '<a class="more_infos">+ d\'infos </a>'
                  single_loc += '</li>'
                  single_loc += '</label>'

                  $('.stores_list').append(single_loc)

                geojson.features.push({ id: loc.id, type: 'Feature', geometry: { type: 'Point', coordinates: [loc.longitude, loc.latitude] }, properties: { title: loc.company_name, description: 'de ' + loc.opening_hours[textual_day].opens + " à " + loc.opening_hours[textual_day].closes } });
              }


            });

            $('.pickup .more_infos').click(function(e){
              e.preventDefault()
              $(this).parent().toggleClass('deployed');
              $(this).parent().toggleClass('undeployed');
              $(this).parent().find('.toggle_content').slideToggle();
            })

            $(".store_item input[type='radio']").change(function() {
              console.log('change')
              console.log($(this).is(':checked'))
              console.log($(this).val())
              $(".store_btn").fadeIn();
              $("#company, #pickup_company").val( $(this).attr('data-company_name') )
              $("#addr1, #pickup_addr1").val( $(this).attr('data-addr1') )
              $("#addr2, #pickup_addr2").val( $(this).attr('data-addr2') )
              $("#city, #pickup_city").val( $(this).attr('data-city') )
              $("#zip").val( $(this).attr('data-zip') )
              $("#pickup_id").val( $(this).attr('data-loc_id') )
              $("#pickup_country").val( $(this).attr('data-country') )
              $('#pickup_date').val($('body').attr('data-dlvy-date').replace(/-/g, '/'))
              $('#pickup_time').val($(this).attr('data-hour'))
              $('#custom_attribute_1, #custom_attribute_1_1').val($('body').attr('data-custom_attribute_1'))
              $('.dlvy_input').val('')



              $('.stores_list .store_item').attr('style','border: solid 1px #C9C9C9 !important;')
              if ($(this).is(':checked')) {
                $(this).parents('.store_item').css('border', 'solid 1px #3eab37')
              } else {
                $(this).parents('.store_item').attr('style','border: solid 1px #C9C9C9 !important;')
              }




            })

          }
        }
      })
    }


    var get_locations_new = function() {
        var zip_code = $('input[name="zip"]').val() || "59000"
        // call zapiet

        console.log("get_locations_new")
        $.ajax({
            method: "POST",
            url: "https://api.zapiet.com/v4.0/delivery/locations?shop=mes-voisins-producteurs2.myshopify.com",
            data: { "geoSearchQuery": zip_code, "shop": "mes-voisins-producteurs2.myshopify.com" },
            dataType: 'json',
            success: function(useremail) { console.log(useremail); },
            error: function(xhr, status, err) {},
            complete: function(xhr, status) {


                if (status === 'error' || !xhr.responseText) {
                    // if error, no delivery in your town
                    $('#no_dlv').fadeIn();
                } else {
                    json_data = JSON.parse(xhr.responseText);
                    console.log(json_data);
                    console.log("______________");
                    console.log(json_data.id)
                    $('body').attr('data-delivery-location-id', json_data.id)
                    $('body').attr("data-custom_attribute_1", json_data.custom_attribute_1)
                    $('body').attr("data-company_name", json_data.company_name)


                    var dlv_enabled = json_data.delivery[textual_day].slots.enabled;
                    var is_blackout_day = json_data.delivery[textual_day].blackout_dates.includes(today_date);
                    console.log(is_blackout_day + "is_blackout_day");
                    console.log(json_data.delivery[textual_day].blackout_dates);

                    if (dlv_enabled && !is_blackout_day) {
                        // if delivery is okay today
                        //
                        var dadate = new Date
                        $('#dlv_ok_today p, .newform_header p').html("{{ settings.dlv_ok_today }}" + " <b>" + days_fr[days.indexOf(textual_day)] + ' ' + currentTime.getDate() +' ' + monthNames[currentTime.getMonth()] + '</b>');


                        console.log(currentTime.toLocaleDateString('FR').split('/').reverse().join('-'))

                        var next_available_dlv_day = getNextDlvDay(json_data.delivery);
                        $('body').attr('data-dlvy-day', next_available_dlv_day)
                        $('body').attr('data-dlvy-date', currentTime.toLocaleDateString('FR').split('/').reverse().join('-'))


                        console.log("next_available_dlv_day")
                        console.log(next_available_dlv_day)
                        // if (days[dadate.getDay()] == textual_day) {
                        //   $('#dlv_ok_today p').append(" aujourd'hui");
                        // } else {
                        //   $('#dlv_ok_today p').text("{{ settings.dlv_ok_today }}" +" " + days_fr[days.indexOf(textual_day)]  + ' (' + currentTime.toLocaleDateString('FR') + ')' );
                        // }
                        $('#dlv_ok_today').fadeIn();
                    } else {
                        // if delivery is not okay today give the next available day

                        var next_available_dlv_day = getNextDlvDay(json_data.delivery);
                        $('body').attr('data-dlvy-day', next_available_dlv_day)

                        console.log("next_available_dlv_day")
                        console.log(next_available_dlv_day)

                        if (next_available_dlv_day == -1) {
                            $('.next_dlv_day').text(' ' + 'dans quelques jours')
                        } else {
                            $('.next_dlv_day').text(' ' + days_fr[next_available_dlv_day])
                        }
                        $('#no_today').fadeIn();
                    }

                    getTimeSlot_new()
                }
            }
        })
    }
    var getTimeSlot_new = function() {
      // call zapiet
      console.log('getTimeSlot');

      var loc_id = $('body').attr('data-delivery-location-id')
      var dlvy_day = $('body').attr('data-dlvy-date')
      var zip = $('.address_check input[name="zip"').val()
      console.log(dlvy_day + zip + loc_id);
      $.ajax({


        method: "GET",
        url: "https://api.zapiet.com/v4.0/delivery/locations/"+loc_id+"/calendar/"+dlvy_day+"?shop=mes-voisins-producteurs2.myshopify.com&postal_code="+zip,
        // method: "POST",
        // url: "https://api.zapiet.com/v4.0/delivery/locations?shop=mes-voisins-producteurs2.myshopify.com",
        // data: { "geoSearchQuery": JSON.parse(Cookies.get('dlvy')).code_postal, "shop": "mes-voisins-producteurs2.myshopify.com" },
        dataType: 'json',
        success: function(slots) {console.log(slots);},
        error: function(xhr, status, err) {},
        complete: function(xhr, status) {
          console.log(xhr);
          if (status === 'error' || !xhr.responseText || xhr.responseJSON.length == 0) {
            // if error, no delivery in your town
            console.log("error ?");


            $('.slots_cont .no_slots_available').show()
            $('.slots_cont .subtitle').hide()
            $('.slots').html('')

          } else {

            json_data = JSON.parse(xhr.responseText);
            console.log(json_data);
            console.log("_____2__hoho___");

              $('.slots_cont .no_slots_available').hide()
              $('.slots_cont .subtitle').show()
              $('.slots').html('')
              for (var i = json_data.length - 1; i >= 0; i--) {
                $('.slots').prepend("<div class='slot' id='" + json_data[i].id + "'>"+  json_data[i].available_from.replace(/:/i,"H" ).replace(/00/i,"" ) + ' - ' + json_data[i].available_until.replace(/:/i,"H" ).replace(/00/i,"" ) +"</div>")
              }

              $('.slots .slot').click(function() {
                $('.slots .slot').removeClass('selected');
                $(this).addClass('selected');
                $('.slot-selected').removeClass('hidden');

                var arr = $(this).text().split(' - ')
                arr[0].length == 3 ? arr[0] = arr[0] + '00' : arr[0]
                arr[1].length == 3 ? arr[1] = arr[1] + '00' : arr[1]


                $('#dlvy_date').val($('body').attr('data-dlvy-date').replace(/-/g, '/'))
                $('#dlvy_time').val(arr.join(' - ').replace(/H/g, ':'))
                $('#dlvy_slot_id').val($(this).attr('id'))
                $('#dlvy_location_id').val($('body').attr('data-delivery-location-id'))
                $('#custom_attribute_1, #custom_attribute_1_1').val($('body').attr('data-custom_attribute_1'))

                $('.pickup_input').val('')



              })



            // $('.day_today').text(days_fr[days.indexOf(JSON.parse(Cookies.get('dlvy')).textual_day)] + '-' + JSON.parse(Cookies.get('dlvy')).day.split('-').reverse().join('/'));
            // $('#999').remove()






          }
        }
      })

    }

    var check_if_already_sent = function() {
      console.log('check_if_already_sent')


      CartJS.getCart(options = {success: function(data) {

        if (Cookies.getJSON('sent_to_checkout')) {
          console.log(Cookies.getJSON('sent_to_checkout')['token'])
          console.log(data.token)
          if (data.token == Cookies.getJSON('sent_to_checkout')['token']) {
              var old_cart;
              console.log('GET NEW CART TOKEN')
              console.log(data);
              old_cart = data
              Cookies.set('cart', '')
              var items = {"items":[]}
              console.log(items);
              console.log( old_cart.items);
              old_cart.items.forEach(function(item) {
                items['items'].push( { "quantity": item.quantity, "id": item.variant_id } )
              })
              console.log(items);
              $.ajax({
                url: '/cart/add.js',
                dataType: 'json',
                cache: false,
                type: 'post',
                data: items,
                success: function(data) {
                  CartJS.getCart()
                  console.log('done');
                }
              })
          }
        }

      }})
    }

    var postCheckout_new = function() {
      console.log('postcheckout')
        console.log(currentTime)

        var cart = CartJS.cart
        Cookies.set('sent_to_checkout', {token: cart.token})
        var date_now = new Date
        var method = $('body').attr('data-method')
        var newDate = (currentTime.getYear() - 100) +"-"+currentTime.getMonth()+"-"+currentTime.getDate();
        var expr = /\d+/g;
        var parts = newDate.match(expr);
        var json_date = new Date("20"+parts[0], parts[1], parts[2]);
        console.log(json_date)
        if (method != 'pickup') {
          var location_id = $('body').attr('data-delivery-location-id')
          var hour = parseInt($(".slot.selected").text().split(" - ")[0].split("H")[0])
          var minutes = parseInt($(".slot.selected").text().split(" - ")[0].split("H")[1])
        } else {
          var location_id = $('.stores_list input:checked').val()
          var hour = parseInt($('.stores_list input:checked').attr('data-slot').split(" - ")[0].split("H")[0])
          var minutes = parseInt($('.stores_list input:checked').attr('data-slot').split(" - ")[0].split("H")[1])
        }

        json_date = new Date(json_date.setHours(hour + 1))
        if (!Number.isNaN(minutes)) {
          json_date = new Date(json_date.setMinutes(minutes[1]))
        }
        json_date = json_date.toISOString().split('.').shift() + 'Z';
        console.log(json_date)

        var lineitems = []

        cart.items.forEach(function(lineitem) {
          lineitems.push({
            "key": lineitem.key,
            "properties": []
          })
        })
        if (lineitems.length > 0) {
          lineitems[0].properties = [{ "name": "_ZapietId", "value": cart.token }]
        }



        if (window.location.pathname.includes("/cart")) {
            var data = {
                "updated_at": date_now.toISOString(),
                "cart_token": cart.token,

                "note_attributes": [{
                    "name": "Checkout-Method",
                    "value": method
                  },
                  {
                    "name": method.substr(0,1).toUpperCase()+method.substr(1) + "-Location-Id",
                    "value": location_id
                  }

                ],
                "line_items": lineitems
            }

            if (method == 'delivery') {
                data['note_attributes'].push({
                  "name": "Delivery-Date",
                  "value": json_date
                })
            }

            console.log(data)
            console.log("_______________________________")

            console.log(data)

            $.ajax({
              method: "POST",
              url: "https://rates.storepickup.io/v1/checkouts",
              contentType: "application/json",
              dataType: "json",
              headers: {
                "X-Shopify-Shop-Domain": "mes-voisins-producteurs2.myshopify.com",
                "X-Shopify-Topic": "checkouts/update"
              },
              data: JSON.stringify(data),
              success: function(useremail) {
                console.log(useremail)
                $("#cart_form").submit()
              },
              error: function(xhr, status, err) {
                // $("#cart_form").submit()

                console.log(xhr);
                console.log(status);
                console.log(err);

              },
              complete: function(xhr, status) {
                console.log(xhr.responseJSON)


              }
            })
          }
        }











    if (location.href.indexOf('/cart') > -1) {
      get_locations_new();
      check_if_already_sent();
      $('body').attr('data-method', 'delivery')
      $('.checkout').css('pointer-events', 'initial')
    }

    // On click validate cart display new form
    $('.checkout').click(function(e) {
      e.preventDefault();
      e.stopPropagation();
      e.stopImmediatePropagation();
      CartJS.getCart();
      call_pickup_new();

      console.log('add_toCart');
      $('#newform').show();
      if ($(window).width() > 780) {
        $('.desktop-img').show();
      }

      $('.dynamic_content .address_check').show();
      $('.dynamic_content .pickup').hide()
      $('.dynamic_content .wrong_address').hide()
      $('.dynamic_content .slots').hide()


      $('.container.main.content, .newsletter-section, .recommatic').hide()

      if (CartJS.cart.total_price > 8000) {
        $('.method .dlvy .conditions').text('Livraison offerte')
      } else if (CartJS.cart.total_price < 4500) {
        $('.method .dlvy .conditions').text('5,90 €')
      } else {
        $('.method .dlvy .conditions').text('3,90 €')

      }
      if (CartJS.cart.total_price < 3000) {
        $('.method .pickup').css('pointer-events', 'none')
      } else {
        $('.method .pickup').css('pointer-events', 'initial')

      }
      cart = CartJS.cart
      CartJS.updateItem(1, cart.items[0].quantity, properties = { "_ZapietId": cart.token })

      // GET SLOTS and pickup
    })


    // back to cart
    $('.mini_cart').click(function(e) {
      if (location.href.indexOf('/cart') > -1){
        e.preventDefault()
        $('#newform').hide();
        $('.desktop-img').hide();
        $('.dynamic_content .address_check').show();
        $('.dynamic_content .pickup').hide()
        $('.dynamic_content .wrong_address').hide()
        $('.dynamic_content .slots').hide()
        $('.container.main.content, .newsletter-section, .recommatic').show()
      }
    })

    // On delivery method choice display dynic content
    $('.method .dlvy').click(function() {
      $('.method button').removeClass('selected');
      $(this).addClass('selected');
      $('.dynamic_content .address_check').show();
      $('.address_check_btn .content').show()
      $('.address_check_btn .loader').hide()
      $('.dynamic_content .pickup').hide()
      $('.dynamic_content .wrong_address').hide()
      $('#method').val('delivery')
      $('body').attr('data-method', 'delivery')
    })


    $('.slot-selected button, .store_btn').click(function(e) {
      // go to checkout
      e.preventDefault()
      e.stopPropagation()
      e.stopImmediatePropagation()
      console.log("clicked button");
      $('.loader', this).show()
      $('.content', this).hide()

      postCheckout_new()
    })

    $('.method .pickup').click(function() {
        $('.method button').removeClass('selected');
        $(this).addClass('selected');
        $('.dynamic_content .address_check').hide();
        $('.dynamic_content .pickup').show()
        $('.dynamic_content .wrong_address').hide()
        $('.dynamic_content .slots_cont').hide()
        $('#method').val('pickup')
        $('body').attr('data-method', 'pickup')


      }
    )


    $('.pickup_link').click(function() {$('.method .pickup').click()})





    $('.address_check_btn').click(function() {

      $('.address_check_btn .loader').show()
      $('.address_check_btn .content').hide()

      var settings = {
        "url": "https://app.nyx-mvp.ovh/api/v1/lambdas/2/addr_validation?apikey=MVP2410MVP",
        "method": "POST",
        "timeout": 0,
        "headers": {
          "Content-Type": "application/json"
        },
        "data": JSON.stringify({
          "addr1": $('.address_check input[name="address"]').val(),
          "city":$('.address_check input[name="city"]').val(),
          "zip":$('.address_check input[name="zip"').val(),
          "mail": $('.address_check input[name="mail"').val()
        }),
      };

      console.log(settings["data"]["addr1"])
      console.log(settings["data"]["city"])

      if ($('.address_check input[name="city"]').val() != "" && $('.address_check input[name="zip"]').val() != "" && $('.address_check input[name="address"]').val() != "") {
        $.ajax(settings).done(function (response) {
          console.log(response);
          console.log(response.in_zone);

          if (response.in_zone) {
            $('.address_check').hide();
            $('.wrong_address').hide();
            $('.dynamic_content').addClass('address_checked')
            $('.address_check_btn .loader').hide()
            $('.address_check_btn .content').show()

            $('#addr1').val($('.address_check input[name="address"]').val())
            $('#city').val($('.address_check input[name="city"]').val())
            $("#zip").val($('.address_check input[name="zip"]').val())
            $('#company').val('')

            get_locations_new();


            // getSlots
            $('.slots_cont').fadeIn()
          } else {
            $('.address_check, .slots_cont').hide();
            $('.wrong_address').show()
          }
        });
      } else {
        $('.fields').text("Veuillez remplir tous les champs !")
      }
      $('.address_check, .slots_cont').hide();
      // $('.wrong_address').show()


    })

  })
})

